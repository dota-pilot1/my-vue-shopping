// Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User 모델 (사용자)
model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계
  orders    Order[]

  @@map("users")
}

// Product 모델 (상품)
model Product {
  id        Int     @id @default(autoincrement())
  name      String
  description String @db.Text
  price     Int
  imageUrl  String?
  stock     Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계
  cartItems CartItem[]
  orderItems OrderItem[]

  @@map("products")
}

// Cart 모델 (장바구니)
model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계
  items     CartItem[]

  @@map("carts")
}

// CartItem 모델 (장바구니 아이템)
model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계
  cart      Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@map("cart_items")
}

// Order 모델 (주문)
model Order {
  id        Int     @id @default(autoincrement())
  userId    Int
  totalPrice Int
  status    String @default("pending") // pending, completed, cancelled
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     OrderItem[]

  @@map("orders")
}

// OrderItem 모델 (주문 아이템)
model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계
  order     Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
